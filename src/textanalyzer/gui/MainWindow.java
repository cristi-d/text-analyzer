/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package textanalyzer.gui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;
import textanalyzer.Application;
import textanalyzer.gui.custom.animations.StatusBarAnimation;
import textanalyzer.gui.custom.components.MarkUtteranceDialog;
import textanalyzer.gui.custom.components.TextDisplayer;
import textanalyzer.gui.custom.components.TextDisplayerBorder;
import textanalyzer.gui.custom.components.VoiceDisplayPanel;
import textanalyzer.gui.custom.models.PersonageAliasesListModel;
import textanalyzer.gui.custom.models.PersonagesComboBoxModel;
import textanalyzer.gui.custom.models.PersonagesListModel;
import textanalyzer.gui.custom.models.TermAssignmentsListModel;
import textanalyzer.gui.custom.models.TermsListModel;
import textanalyzer.gui.custom.models.VoiceListModel;
import textanalyzer.gui.custom.models.VoicesComboBoxModel;
import textanalyzer.gui.custom.renderers.ColorComboBoxRenderer;
import textanalyzer.gui.custom.renderers.ColorListCellRenderer;
import textanalyzer.gui.custom.renderers.TwoGreyListCellRenderer;
import textanalyzer.model.doc.Document;
import textanalyzer.model.doc.Personage;
import textanalyzer.model.doc.Voice;
import textanalyzer.model.lang.Word;
import textanalyzer.model.lang.WordOccurance;
import textanalyzer.model.music.MusicalStructure;
import textanalyzer.nlp.LanguageUtils;
import textanalyzer.nlp.TextAnalyzer;
import textanalyzer.sonification.MusicalStructureAnalyzer;
import textanalyzer.sonification.Sonificator;

/**
 *
 * @author Cristi
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        markDialog = new MarkUtteranceDialog(this, true);
        textDisplayer = new TextDisplayer(this, markDialog);
        textDisplayerBorder = new TextDisplayerBorder(textDisplayer);
        
        //@todo: move these
        
        
        
        jScrollPane1.setViewportView(textDisplayer);
        jScrollPane1.setRowHeaderView(textDisplayerBorder);
        
        termsList.setCellRenderer(new TwoGreyListCellRenderer());
        termsListModel = new TermsListModel();
        termsList.setModel(termsListModel);
        
        termAssignmentsListModel = new TermAssignmentsListModel();
        
        termAssignmentsList.setCellRenderer(new TwoGreyListCellRenderer());
        termAssignmentsList.setModel(termAssignmentsListModel);
        voicesListModel = new VoiceListModel();
        voicesList.setModel(voicesListModel);
        voicesCellRenderer = new ColorListCellRenderer(voicesListModel);
        voicesList.setCellRenderer(voicesCellRenderer);
        
        voiceSelectionCombo.setModel(new VoicesComboBoxModel(voicesListModel));
        voiceSelectionCombo.setRenderer(new ColorComboBoxRenderer(voicesListModel));
        
        
        addTermButton.setEnabled(false);
        removeTermButton.setEnabled(false);
        
        fileChooser = new JFileChooser(new File("."));
        voiceDisplayPanel = new VoiceDisplayPanel();
        visualsScrollPane.setViewportView(voiceDisplayPanel);
        
        personagesListModel = new PersonagesListModel();
        personagesList.setModel(personagesListModel);
        personagesList.setCellRenderer(new TwoGreyListCellRenderer());
        
        personageAliasesListModel = new PersonageAliasesListModel();
        aliasesList.setModel(personageAliasesListModel);
        aliasesList.setCellRenderer(new TwoGreyListCellRenderer());
        
        characterComboBoxModel = new PersonagesComboBoxModel();
        characterComboBox.setModel(characterComboBoxModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        displayVoiceInteranimation = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        detectVoiceOccurances = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        detectUtterancesButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        computeWordFrequenciesButton = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        personagesList = new javax.swing.JList();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        newPersonageField = new javax.swing.JTextField();
        addCharacterButton = new javax.swing.JButton();
        isNarratorCheckBox = new javax.swing.JCheckBox();
        removeCharacterButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        aliasesList = new javax.swing.JList();
        characterComboBox = new javax.swing.JComboBox();
        jPanel13 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        newAliasField = new javax.swing.JTextField();
        addAliasButton = new javax.swing.JButton();
        removeAliasButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        voicesList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        newVoiceField = new javax.swing.JTextField();
        addVoiceButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newVoiceColor = new javax.swing.JButton();
        removeVoiceButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        termsList = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        termAssignmentsList = new javax.swing.JList();
        addTermButton = new javax.swing.JButton();
        removeTermButton = new javax.swing.JButton();
        voiceSelectionCombo = new javax.swing.JComboBox();
        filterField = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        visualsPanel = new javax.swing.JPanel();
        visualsScrollPane = new javax.swing.JScrollPane();
        personagesPanel = new javax.swing.JPanel();
        voicesPanel = new javax.swing.JPanel();
        saveChartButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newDocumentMenuItem = new javax.swing.JMenuItem();
        loadMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createTitledBorder("Actions")));

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        displayVoiceInteranimation.setText("Display Voice Interanimation");
        displayVoiceInteranimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayVoiceInteranimationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayVoiceInteranimation)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(displayVoiceInteranimation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        detectVoiceOccurances.setText("Detect Voice Occurances");
        detectVoiceOccurances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detectVoiceOccurancesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detectVoiceOccurances, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detectVoiceOccurances)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        detectUtterancesButton.setText("Detect Utterances");
        detectUtterancesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detectUtterancesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detectUtterancesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detectUtterancesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        computeWordFrequenciesButton.setText("Compute Word Frequencies");
        computeWordFrequenciesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeWordFrequenciesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(computeWordFrequenciesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computeWordFrequenciesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Characters"));

        personagesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        personagesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        personagesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personagesListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(personagesList);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Name:");

        newPersonageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPersonageFieldActionPerformed(evt);
            }
        });

        addCharacterButton.setText("Add Character");
        addCharacterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCharacterButtonActionPerformed(evt);
            }
        });

        isNarratorCheckBox.setText("Narrator?");
        isNarratorCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isNarratorCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newPersonageField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(isNarratorCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCharacterButton)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(newPersonageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCharacterButton)
                    .addComponent(isNarratorCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        removeCharacterButton.setText("Remove Character");
        removeCharacterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCharacterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeCharacterButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeCharacterButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Character Aliases"));

        aliasesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        aliasesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        aliasesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aliasesListMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(aliasesList);

        characterComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        characterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                characterComboBoxActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Alias:");

        addAliasButton.setText("Add Alias");
        addAliasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAliasButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newAliasField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addAliasButton)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(newAliasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addAliasButton)
                .addGap(7, 7, 7))
        );

        removeAliasButton.setText("Remove Alias");
        removeAliasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAliasButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(characterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeAliasButton))
                .addGap(35, 35, 35))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(characterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeAliasButton)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );

        jTabbedPane2.addTab("Characters", jPanel9);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Voices"));

        voicesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        voicesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voicesListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(voicesList);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        newVoiceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVoiceFieldActionPerformed(evt);
            }
        });

        addVoiceButton.setText("Add Voice");
        addVoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVoiceButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Color:");

        newVoiceColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVoiceColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newVoiceColor))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newVoiceField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(addVoiceButton)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(newVoiceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(newVoiceColor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addVoiceButton)
                .addContainerGap())
        );

        removeVoiceButton.setText("Remove Voice");
        removeVoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeVoiceButton)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeVoiceButton)
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Term Assignments"));

        termsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(termsList);

        termAssignmentsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(termAssignmentsList);

        addTermButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textanalyzer/gui/img/arrow_right.png"))); // NOI18N
        addTermButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTermButtonActionPerformed(evt);
            }
        });

        removeTermButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textanalyzer/gui/img/arrow_left.png"))); // NOI18N
        removeTermButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTermButtonActionPerformed(evt);
            }
        });

        voiceSelectionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        voiceSelectionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voiceSelectionComboActionPerformed(evt);
            }
        });

        filterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterFieldActionPerformed(evt);
            }
        });
        filterField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterFieldKeyReleased(evt);
            }
        });

        filterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/textanalyzer/gui/img/Search.png"))); // NOI18N
        filterButton.setMaximumSize(new java.awt.Dimension(20, 20));
        filterButton.setMinimumSize(new java.awt.Dimension(20, 20));
        filterButton.setPreferredSize(new java.awt.Dimension(20, 20));
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(filterField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTermButton)
                    .addComponent(removeTermButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voiceSelectionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addTermButton)
                        .addGap(18, 18, 18)
                        .addComponent(removeTermButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(voiceSelectionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Voices", jPanel1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane2)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Text", jScrollPane1);

        visualsScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        personagesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        personagesPanel.setPreferredSize(new java.awt.Dimension(82, 600));

        javax.swing.GroupLayout personagesPanelLayout = new javax.swing.GroupLayout(personagesPanel);
        personagesPanel.setLayout(personagesPanelLayout);
        personagesPanelLayout.setHorizontalGroup(
            personagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );
        personagesPanelLayout.setVerticalGroup(
            personagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );

        voicesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        voicesPanel.setPreferredSize(new java.awt.Dimension(763, 38));

        javax.swing.GroupLayout voicesPanelLayout = new javax.swing.GroupLayout(voicesPanel);
        voicesPanel.setLayout(voicesPanelLayout);
        voicesPanelLayout.setHorizontalGroup(
            voicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 759, Short.MAX_VALUE)
        );
        voicesPanelLayout.setVerticalGroup(
            voicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        saveChartButton.setText("Save");
        saveChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout visualsPanelLayout = new javax.swing.GroupLayout(visualsPanel);
        visualsPanel.setLayout(visualsPanelLayout);
        visualsPanelLayout.setHorizontalGroup(
            visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visualsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(personagesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(visualsPanelLayout.createSequentialGroup()
                        .addComponent(saveChartButton)
                        .addGap(18, 18, 18)))
                .addGroup(visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voicesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(visualsScrollPane))
                .addContainerGap())
        );
        visualsPanelLayout.setVerticalGroup(
            visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visualsPanelLayout.createSequentialGroup()
                .addGroup(visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voicesPanel, 37, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visualsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(saveChartButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(visualsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(visualsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                    .addComponent(personagesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Visual", visualsPanel);

        jMenu1.setText("File");

        newDocumentMenuItem.setText("New");
        newDocumentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDocumentMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(newDocumentMenuItem);

        loadMenuItem.setText("Load");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadMenuItem);

        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newVoiceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newVoiceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newVoiceFieldActionPerformed

    private void voiceSelectionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voiceSelectionComboActionPerformed
        // TODO add your handling code here:
        selectedVoiceIndex = voiceSelectionCombo.getSelectedIndex();
        if (selectedVoiceIndex != -1) {
            termAssignmentsListModel.setSelectedVoice(doc.getVoice(selectedVoiceIndex));
            termAssignmentsList.updateUI();
        }
    }//GEN-LAST:event_voiceSelectionComboActionPerformed

    private void newVoiceColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newVoiceColorActionPerformed
        // TODO add your handling code here:
        
        if (lastColor == null) {
            lastColor = Color.YELLOW;
        }
        
        Color color = JColorChooser.showDialog(newVoiceColor, "Choose voice highlight color", lastColor);
        
        if (color != null) {
            newVoiceColor.setBackground(color);
            lastColor = color;
        }
    }//GEN-LAST:event_newVoiceColorActionPerformed

    private void addVoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVoiceButtonActionPerformed
        // TODO add your handling code here:
        
        if (newVoiceField.getText() == null || newVoiceField.getText().isEmpty()) {
            return;
        }
        
        if (voicesListModel.hasVoiceName(newVoiceField.getText())) {
            return;
        }
        
        if (newVoiceColor.getBackground() == null) {
            return;
        }
        
        if (voicesListModel.hasColor(newVoiceColor.getBackground())) {
            return;
        }
                
        voicesListModel.addVoice(newVoiceField.getText(), newVoiceColor.getBackground());
        voicesList.updateUI();
        voiceSelectionCombo.updateUI();
        
        doc.addVoice(newVoiceField.getText(), newVoiceColor.getBackground());
        
        addTermButton.setEnabled(true);
        removeTermButton.setEnabled(true);
        
        if (voicesListModel.getSize() == 1) {
            voiceSelectionCombo.setSelectedIndex(0);
        }
        
        detectVoiceOccurances.setEnabled(true);
    }//GEN-LAST:event_addVoiceButtonActionPerformed

    private void removeVoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVoiceButtonActionPerformed
        // TODO add your handling code here:
        int selectedVoice = voicesList.getSelectedIndex();
        if (selectedVoice == -1) {
            return;
        }
        
        Voice v = doc.removeVoice(selectedVoice);
        voicesListModel.removeVoice(selectedVoice);
        
        for (Word w : v.getAssociatedTerms()) {
            termsListModel.addWord(w);
        }
        
        if (selectedVoice >= voicesListModel.getSize()) {
            selectedVoice = voicesListModel.getSize() - 1;  
        }
        
        if (selectedVoice >= 0) {
            voiceSelectionCombo.setSelectedIndex(selectedVoice);
            termAssignmentsListModel.setSelectedVoice(doc.getVoice(selectedVoice));
        } else {
            voiceSelectionCombo.setSelectedIndex(-1);
            termAssignmentsListModel.setSelectedVoice(null);
            addTermButton.setEnabled(false);
            removeTermButton.setEnabled(false);
        }
        
        
        
        termAssignmentsList.updateUI();
        voiceSelectionCombo.updateUI();
        voicesList.updateUI();
        termsList.updateUI();
        
        detectVoiceOccurances.setEnabled(true);
    }//GEN-LAST:event_removeVoiceButtonActionPerformed

    private void addTermButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTermButtonActionPerformed
        // TODO add your handling code here:
        int selectedWord = termsList.getSelectedIndex();
        Word w = termsListModel.getWordAt(selectedWord);
        Voice v = doc.getVoice(selectedVoiceIndex);
        termsListModel.removeWord(selectedWord);
        
        v.addAssociatedTerm(w);
        termAssignmentsList.updateUI();
        termsList.updateUI();
        
        detectVoiceOccurances.setEnabled(true);
    }//GEN-LAST:event_addTermButtonActionPerformed

    private void removeTermButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTermButtonActionPerformed
        // TODO add your handling code here:
        int selectedWord = termAssignmentsList.getSelectedIndex();
        Voice v = doc.getVoice(selectedVoiceIndex);
        Word w = v.removeAssociatedTerm(selectedWord);
        termsListModel.addWord(w);
        
        termAssignmentsList.updateUI();
        termsList.updateUI();
        
        detectVoiceOccurances.setEnabled(true);
    }//GEN-LAST:event_removeTermButtonActionPerformed

    private void detectVoiceOccurancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detectVoiceOccurancesActionPerformed
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        
        new Thread(animation).start();
        
        new Thread(new Runnable() {

            @Override
            public void run() {
                TextAnalyzer.detectVoiceOccurances(doc);
                textDisplayer.getHighlighter().removeAllHighlights();
                highlight(doc.getVoiceOccurances());
                voiceDisplayPanel.setDocument(doc);    
                detectVoiceOccurances.setEnabled(false);
                animation.stopAnimation();
            }
        }).start();
    }//GEN-LAST:event_detectVoiceOccurancesActionPerformed

    private void voicesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voicesListMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() >= 2 && evt.getButton() == MouseEvent.BUTTON1) {
            int selectedVoice = voicesList.getSelectedIndex();
            voiceSelectionCombo.setSelectedIndex(selectedVoice);
            termAssignmentsListModel.setSelectedVoice(doc.getVoice(selectedVoice));
        }
    }//GEN-LAST:event_voicesListMouseClicked

    private void displayVoiceInteranimationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayVoiceInteranimationActionPerformed
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        
        new Thread(animation).start();
        
        new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    // TODO add your handling code here:
                    TextAnalyzer.detectVoiceInteranimation(doc);
                    voiceDisplayPanel.setDocument(doc);
                    personagesPanel.removeAll();
                    personagesPanel.setLayout(null);

                    for (int i = 0; i < doc.getPersonages().size(); i++) {
                        Personage p = doc.getPersonages().get(i);
                        JLabel label = new JLabel(p.getName());
                        label.setBounds(10, VoiceDisplayPanel.CHART_OFFSET_Y + VoiceDisplayPanel.PERSONAGE_SPACING * i - 5, 70, 20);
                        personagesPanel.add(label);
                    }

                    voicesPanel.removeAll();
                    voicesPanel.setLayout(null);
                    for (int i = 0; i < doc.getVoices().size(); i++) {
                        Voice v = doc.getVoices().get(i);
                        JLabel label = new JLabel(v.getName());
                        label.setOpaque(true);
                        label.setBackground(v.getHighlightColor());
                        label.setBounds(20 + i *120, 9, 100, 20);
                        voicesPanel.add(label);
                    }

                    voicesPanel.updateUI();
                    personagesPanel.updateUI();

                    jTabbedPane1.setSelectedIndex(1);
                    jTabbedPane1.updateUI();
                    
                    MusicalStructure musicalStructure = MusicalStructureAnalyzer.computeMusicalStructure(doc);
                    Sonificator.compose(musicalStructure);
                    
                    animation.stopAnimation();
                    
                    
                } catch (Exception ex) {
                 Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_displayVoiceInteranimationActionPerformed

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        // TODO add your handling code here:
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        final Component parent = this;
        
        int ret = fileChooser.showOpenDialog(this);
        
        
        if (ret == JFileChooser.APPROVE_OPTION) {
            
            new Thread(animation).start();
            
            new Thread(new Runnable() {
                @Override
                public void run() {
                    File f = fileChooser.getSelectedFile();
                    if (Application.loadProject(f) == false) {
                        JOptionPane.showMessageDialog(parent, "Could not load project file from " + f.getName(), "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    doc = Application.doc;

                    if (doc.getUtterances() != null && doc.getUtterances().isEmpty() == false) {
                        detectUtterancesButton.setEnabled(false);
                    } else {
                        detectUtterancesButton.setEnabled(true);
                    }

                    if (doc.getWordsList() != null && doc.getWordsList().isEmpty() == false) {
                        computeWordFrequenciesButton.setEnabled(false);
                    } else {
                        computeWordFrequenciesButton.setEnabled(true);
                    }

                    detectVoiceOccurances.setEnabled(true);
                    displayVoiceInteranimation.setEnabled(true);
                    
                    animation.stopAnimation();
                }
            }).start();
            
        }
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        final Component parent = this;
        
        new Thread(animation).start();
        
        new Thread(new Runnable() {

            @Override
            public void run() {
                if (Application.saveProject() == false) {
                    JOptionPane.showMessageDialog(parent, "Could not save processed document to " + doc.getProjectFile().getName(), "Error", JOptionPane.ERROR_MESSAGE);
                 }
                
                animation.stopAnimation();
            }
        }).start();
        
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void newDocumentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDocumentMenuItemActionPerformed
        // TODO add your handling code here:
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        final Component parent = this;
        
        fileChooser.setDialogTitle("Select the text file...");
        int ret = fileChooser.showOpenDialog(this);
        
        if (ret == JFileChooser.APPROVE_OPTION) {
            final File textFile = fileChooser.getSelectedFile();
            
            fileChooser.setDialogTitle("Select the project file...");
            ret = fileChooser.showOpenDialog(this);
            
            if (ret == JFileChooser.APPROVE_OPTION) {
                final File projectFile = fileChooser.getSelectedFile();
                
                new Thread(animation).start();
                
                new Thread(new Runnable() {

                    @Override
                    public void run() {
                        if (Application.createNewProject(textFile, projectFile) == false) {
                            JOptionPane.showMessageDialog(parent, "Could not create new project " + projectFile.getName() +  " from text file " + textFile.getName(), "Error", JOptionPane.ERROR_MESSAGE);
                        } else {
                            detectUtterancesButton.setEnabled(true);
                            computeWordFrequenciesButton.setEnabled(true);
                        }
                        
                        animation.stopAnimation();
                    }
                }).start();
            }
        }
    }//GEN-LAST:event_newDocumentMenuItemActionPerformed

    private void personagesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personagesListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_personagesListMouseClicked

    private void newPersonageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPersonageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPersonageFieldActionPerformed

    private void aliasesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aliasesListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aliasesListMouseClicked

    private void detectUtterancesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detectUtterancesButtonActionPerformed
        // TODO add your handling code here:
        final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
        
        new Thread(animation).start();
        
        new Thread(new Runnable() {

            @Override
            public void run() {
                TextAnalyzer.detectUtterances(doc);
                jScrollPane1.repaint();
                animation.stopAnimation();
            }
        }).start();
        
        
    }//GEN-LAST:event_detectUtterancesButtonActionPerformed

    private void addCharacterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCharacterButtonActionPerformed
        // TODO add your handling code here:
        String name = newPersonageField.getText();
        
        if (name == null || name.isEmpty()) {
            return;
        }
        
        if (doc.getPersonageByName(name) != null) {
            return;
        }
        
        this.doc.addPersonage(name);
        
        if (isNarratorCheckBox.isSelected()) {
            doc.setNarrator(doc.getPersonageByName(name));
            isNarratorCheckBox.setSelected(false);
        }
        
        personagesList.updateUI();
        characterComboBox.updateUI();
    }//GEN-LAST:event_addCharacterButtonActionPerformed

    private void removeCharacterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCharacterButtonActionPerformed
        // TODO add your handling code here:
        int index = personagesList.getSelectedIndex();
        int index2 = characterComboBox.getSelectedIndex();
        
        if (index != -1) {
            doc.removePersonageByIndex(index);
        }

        if (index2 == index) {
            if (doc.getPersonages().size() <= index) {
                if (doc.getPersonages().size() >= 1) {
                    characterComboBox.setSelectedIndex(doc.getPersonages().size() - 1);
                    personageAliasesListModel.setPersonage(doc.getPersonages().get(doc.getPersonages().size() - 1));
                } else {
                    characterComboBox.setSelectedIndex(-1);
                    personageAliasesListModel.setPersonage(null);
                }
            } else {
                characterComboBox.setSelectedIndex(index);
                personageAliasesListModel.setPersonage(doc.getPersonages().get(index));
            }
        }
        

        
        personagesList.updateUI();
        aliasesList.updateUI();
        characterComboBox.updateUI();
    }//GEN-LAST:event_removeCharacterButtonActionPerformed

    private void characterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_characterComboBoxActionPerformed
        // TODO add your handling code here:
        if (characterComboBox.getSelectedIndex() != -1) {
            personageAliasesListModel.setPersonage(doc.getPersonages().get(characterComboBox.getSelectedIndex()));
            aliasesList.updateUI();
        }
        
    }//GEN-LAST:event_characterComboBoxActionPerformed

    private void addAliasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAliasButtonActionPerformed
        // TODO add your handling code here:
        
        if (newAliasField.getText() == null || newAliasField.getText().isEmpty()) {
            return;
        }
        
        String newAlias = newAliasField.getText();
        
        Personage p = doc.getPersonages().get(characterComboBox.getSelectedIndex());
        
        for (String alias : p.getAliases()) {
            if (alias.equals(newAlias)) {
                return;
            }
        }
        
        doc.addPersonageAlias(characterComboBox.getSelectedIndex(), newAlias);
        
        aliasesList.updateUI();
    }//GEN-LAST:event_addAliasButtonActionPerformed

    private void removeAliasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAliasButtonActionPerformed
        // TODO add your handling code here:
        
       if (aliasesList.getSelectedIndex() == -1) {
           return;
       }
       
       doc.removePersonageAlias(characterComboBox.getSelectedIndex(), 
               personageAliasesListModel.getElementAt(aliasesList.getSelectedIndex()).toString());
        
       aliasesList.updateUI();
    }//GEN-LAST:event_removeAliasButtonActionPerformed

    private void computeWordFrequenciesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeWordFrequenciesButtonActionPerformed
        // TODO add your handling code here:
        if (doc != null) {
            final StatusBarAnimation animation = new StatusBarAnimation(jProgressBar1);
            
            new Thread(animation).start();
            
            new Thread(new Runnable() {

                @Override
                public void run() {
                    TextAnalyzer.computeWordFrequencies(doc);
                    termsListModel.setTermList(doc.getWordsList());
                    termsList.updateUI();

                    computeWordFrequenciesButton.setEnabled(false);
                    
                    animation.stopAnimation();
                }
            }).start();
            
        }

    }//GEN-LAST:event_computeWordFrequenciesButtonActionPerformed

    private void saveChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChartButtonActionPerformed
        // TODO add your handling code here:
        
        
        int ret = fileChooser.showSaveDialog(this);
        
        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                ImageIO.write(voiceDisplayPanel.getSnapshot(), "jpg", fileChooser.getSelectedFile());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Could not save chart to " + fileChooser.getSelectedFile().getName() + ".", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveChartButtonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        String query = filterField.getText();
        termsListModel.setFilteredTerms(LanguageUtils.getRelatedWords(query, termsListModel.getAllTerms()));
        termsList.updateUI();
    }//GEN-LAST:event_filterButtonActionPerformed

    private void filterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterFieldActionPerformed
        // TODO add your handling code here:
        String query = filterField.getText();
        termsListModel.setFilteredTerms(LanguageUtils.getRelatedWords(query, termsListModel.getAllTerms()));
        termsList.updateUI();
    }//GEN-LAST:event_filterFieldActionPerformed

    private void filterFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterFieldKeyReleased
        // TODO add your handling code here:
        
        if (filterField.getText() == null || filterField.getText().isEmpty()) {
            termsListModel.setFilteredTerms(termsListModel.getAllTerms());
            termsList.updateUI();
        }
    }//GEN-LAST:event_filterFieldKeyReleased

    private void isNarratorCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isNarratorCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isNarratorCheckBoxActionPerformed

      
    private void populateVoicesList(Document doc) {
        voicesListModel.clearAll();
        
        for (Voice v : doc.getVoices()) {
            voicesListModel.addVoice(v.getName(), v.getHighlightColor());
        }
        
        if (doc.getVoices().size() > 0) {
            termAssignmentsListModel.setSelectedVoice(doc.getVoices().get(0));
            voiceSelectionCombo.setSelectedIndex(0);
        }
        
        voicesList.updateUI();
    }
    
    public void setDocument(Document doc) {
        this.doc = doc;
        textDisplayer.setDocument(doc);
        textDisplayerBorder.setDocument(doc);
        markDialog.setDocument(doc);
        characterComboBoxModel.setDocument(doc);
        termAssignmentsListModel.setSelectedVoice(null);
        personagesListModel.setDocument(doc);
        
        
        try {
            Rectangle r = textDisplayer.modelToView(textDisplayer.getText().length() - 1);
            textDisplayerBorder.setPreferredSize(new Dimension(80, r.y + 800));
            jScrollPane1.repaint();
        } catch (BadLocationException ex) {
            ;
        }
        
       
        
        populateVoicesList(doc);
        
        termsListModel.clearAll();
        List<Word> temp = new ArrayList<Word>();

        if (doc.getWordsList().isEmpty() == false) {
            for (Word w : doc.getWordsList()) {
                boolean unassigned = true;
                for (Voice v : doc.getVoices()) {
                    if (v.getAssociatedTerms().contains(w)) {
                        unassigned = false;
                        break;
                    }
                }

                if (unassigned) {
                    temp.add(w);
                }
            }
            
            Collections.sort(temp, new Comparator<Word>() {
                @Override
                public int compare(Word o1, Word o2) {
                    if (o1.getOccurances() < o2.getOccurances()) {
                        return 1;
                    } else {
                        if (o1.getOccurances() == o2.getOccurances()) {
                            return 0;
                        } else {
                            return -1;
                        }
                    }
                }
            });

            termsListModel.setTermList(temp);
            computeWordFrequenciesButton.setEnabled(false);
        }
        
        
        if (doc.getVoices().size() > 0) {
            addTermButton.setEnabled(true);
            removeTermButton.setEnabled(true);
        } else {
            addTermButton.setEnabled(false);
            removeTermButton.setEnabled(false);
        }
        
        termsList.updateUI();
        personagesList.updateUI();
        voicesList.updateUI();
        termAssignmentsList.updateUI();
        voiceSelectionCombo.setSelectedIndex(-1);
        
        textDisplayer.setOccurances(null);
    }

    public void highlight(List<WordOccurance> occurances) {
        Highlighter highlighter = textDisplayer.getHighlighter();
        Map<Color, HighlightPainter> highlightersMap = new HashMap<Color, HighlightPainter>();
        
        for (WordOccurance occurance : occurances) {
            try {
                HighlightPainter highlightPainter = highlightersMap.get(occurance.getHighlight());
                
                if (highlightPainter == null) {
                    highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(occurance.getHighlight());
                    highlightersMap.put(occurance.getHighlight(), highlightPainter);
                }
                
                highlighter.addHighlight(occurance.getBeginOffset(), occurance.getEndOffset(), highlightPainter);
            } catch (BadLocationException ex) {
                ;
            }
        }
        
        textDisplayer.setOccurances(occurances);
    }
    
    public void computeWordFrequenciesSetEnabled(boolean enabled) {
        this.computeWordFrequenciesButton.setEnabled(enabled);
    }
    
    
    
    private Document doc;
    private VoiceDisplayPanel voiceDisplayPanel;
    private TextDisplayer textDisplayer;
    private TextDisplayerBorder textDisplayerBorder;
    
    private Color lastColor = null;
    private ColorListCellRenderer voicesCellRenderer;
    private VoiceListModel voicesListModel;
    private TermsListModel termsListModel;
    private int selectedVoiceIndex;
    private TermAssignmentsListModel termAssignmentsListModel;
    private JFileChooser fileChooser;
    
    private PersonageAliasesListModel personageAliasesListModel;
    private PersonagesListModel personagesListModel;
    private MarkUtteranceDialog markDialog;
    private PersonagesComboBoxModel characterComboBoxModel;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAliasButton;
    private javax.swing.JButton addCharacterButton;
    private javax.swing.JButton addTermButton;
    private javax.swing.JButton addVoiceButton;
    private javax.swing.JList aliasesList;
    private javax.swing.JComboBox characterComboBox;
    private javax.swing.JButton computeWordFrequenciesButton;
    private javax.swing.JButton detectUtterancesButton;
    private javax.swing.JButton detectVoiceOccurances;
    private javax.swing.JButton displayVoiceInteranimation;
    private javax.swing.JButton filterButton;
    private javax.swing.JTextField filterField;
    private javax.swing.JCheckBox isNarratorCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JTextField newAliasField;
    private javax.swing.JMenuItem newDocumentMenuItem;
    private javax.swing.JTextField newPersonageField;
    private javax.swing.JButton newVoiceColor;
    private javax.swing.JTextField newVoiceField;
    private javax.swing.JList personagesList;
    private javax.swing.JPanel personagesPanel;
    private javax.swing.JButton removeAliasButton;
    private javax.swing.JButton removeCharacterButton;
    private javax.swing.JButton removeTermButton;
    private javax.swing.JButton removeVoiceButton;
    private javax.swing.JButton saveChartButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JList termAssignmentsList;
    private javax.swing.JList termsList;
    private javax.swing.JPanel visualsPanel;
    private javax.swing.JScrollPane visualsScrollPane;
    private javax.swing.JComboBox voiceSelectionCombo;
    private javax.swing.JList voicesList;
    private javax.swing.JPanel voicesPanel;
    // End of variables declaration//GEN-END:variables
}
